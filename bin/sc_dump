#!/usr/bin/env python
#
# A tool for exporting an existing RDFlib store as N-Quads.
#
# Useful for migrating stores across different version of Python or store types.

from __future__ import unicode_literals, print_function

from os.path import exists, isdir
import rdflib
import sys

def usage():
    print("""usage: {} <directory | :StoreType:options>  ( | gzip > data.nq.gz )

Dumps the content of an RDFlib Sleeycat on the standard output,
in the N-Quads format.
""".format(sys.argv[0]), file=sys.stderr)

def main():
    if len(sys.argv) != 2:
        usage()
        exit(1)
    elif sys.argv[1] in ["-h", "--help"]:
        usage()
        exit()

    if sys.version_info[0] == 2:
        stdout = sys.stdout
    else:
        stdout = open(1, mode='bw')

    if sys.argv[1].startswith(':'):
        _, storeType, options = sys.argv[1].split(':')
    else:
        storeType = 'BerkeleyDB'
        options = sys.argv[1]
    g = rdflib.ConjunctiveGraph(storeType)
    g.open(options)
    g.serialize(stdout, format='nquads')

if __name__ == '__main__':
    main()
